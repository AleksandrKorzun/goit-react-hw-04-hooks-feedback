{"version":3,"sources":["components/Section/Section.module.css","logo.svg","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Statistics/Notification.js","components/Statistics/Statistics.js","components/Feedback.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","Object","keys","map","option","Button","variant","type","name","onClick","style","backgroundColor","marginRight","Section","title","children","className","section","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","span","Math","floor","Feedback","useState","feadback","setFeadback","countTotalFeedback","countPositiveFeedbackPercentage","e","target","prev","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iKACAA,EAAOC,QAAU,CAAC,QAAU,2B,+HCDb,I,0CCcAC,EAXS,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,gBAE/B,OACI,8BACKC,OAAOC,KAAKH,GAASI,KAAI,SAACC,GAAD,OACtB,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,KAAK,SAASC,KAAMJ,EAAqBK,QAAST,EAAiBU,MAAO,CAACC,gBAAiB,QAASC,YAAa,QAA9I,SAAwJR,GAA3FA,S,iBCI9DS,EATC,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SACrB,OACI,0BAASC,UAAWN,IAAMO,QAA1B,UACI,6BAAKH,IACJC,MCCEG,EANM,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACnB,OACI,6BAAKA,K,iBCYEC,EAZI,SAAC,GAAqD,IAApDC,EAAmD,EAAnDA,KAAMC,EAA6C,EAA7CA,QAASC,EAAoC,EAApCA,IAAKC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,mBAC5C,OACI,gCACI,8BAAG,sBAAMT,UAAWN,IAAMgB,KAAvB,kBAAH,KAA8CL,KAC9C,8BAAG,sBAAML,UAAWN,IAAMgB,KAAvB,qBAAH,KAAiDJ,KACjD,8BAAG,sBAAMN,UAAWN,IAAMgB,KAAvB,iBAAH,KAA6CH,KAC7C,8BAAG,sBAAMP,UAAWN,IAAMgB,KAAvB,mBAAH,KAA+CF,KAC/C,8BAAG,sBAAMR,UAAWN,IAAMgB,KAAvB,+BAAH,KAA2DD,EAAqBE,KAAKC,MAAMH,GAAsB,EAAjH,YCiCGI,EAtCE,WACb,MAAgCC,mBAAS,CACrCT,KAAM,EACNC,QAAS,EACTC,IAAK,IAHT,mBAAOQ,EAAP,KAAiBC,EAAjB,KAeOX,EAAsBU,EAAtBV,KAAMC,EAAgBS,EAAhBT,QAASC,EAAOQ,EAAPR,IAChBC,EAPqB,SAACH,EAAMC,EAASC,GACvC,OAAOF,EAAOC,EAAUC,EAMdU,CAAmBZ,EAAMC,EAASC,GAC1CE,EALkC,SAACJ,EAAMG,GAC5C,OAAOH,EAAOG,EAAQ,IAIEU,CAAgCb,EAAMG,GACjE,OACI,qCACQ,cAAC,EAAD,CAASV,MAAM,wBAAf,SACI,cAAC,EAAD,CAAiBf,QAASgC,EAAU/B,gBAhB5B,SAACmC,GACrB,IAAO3B,EAAQ2B,EAAEC,OAAV5B,KACPwB,GAAY,SAACK,GAAD,mBAAC,eAAcA,GAAf,kBAAsB7B,EAAO6B,EAAK7B,GAAQ,YAgB9C,cAAC,EAAD,CAASM,MAAM,aAAf,SACKU,EACD,cAAC,EAAD,CACIH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,IACxB,cAAC,EAAD,CAAcN,QAAQ,4BC5B3BmB,MANf,WACE,OACE,cAAC,EAAD,KCMWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.71084f6a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2IM3_\"};","export default __webpack_public_path__ + \"static/media/logo.31d6cfe0.svg\";","import Button from '@material-ui/core/Button';\r\n\r\n\r\nconst FeedbackOptions = ({options, onLeaveFeedback}) => {\r\n    \r\n    return (\r\n        <div>\r\n            {Object.keys(options).map((option)=>\r\n                <Button variant=\"contained\" type=\"button\" name={option} key={option} onClick={onLeaveFeedback} style={{backgroundColor: \"green\", marginRight: \"10px\"}}>{option}</Button>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FeedbackOptions;","import PropTypes from 'prop-types';\r\nimport style from './Section.module.css'\r\n\r\nconst Section = ({title, children}) => {\r\n    return (\r\n        <section className={style.section}>\r\n            <h2>{title}</h2>\r\n            {children}\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Section;\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired\r\n}","import PropTypes from 'prop-types';\r\n\r\nconst Notification = ({message}) => {\r\n    return (\r\n        <h2>{message}</h2>\r\n    );\r\n}\r\n\r\nexport default Notification;\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string.isRequired\r\n}","import { ClassNames } from '@emotion/react';\r\nimport PropTypes from 'prop-types';\r\nimport style from './Statistics.module.css'\r\n\r\nconst Statistics = ({good, neutral, bad, total, positivePercentage}) => {\r\n    return (\r\n        <div>\r\n            <p><span className={style.span}>Good</span>: {good}</p>\r\n            <p><span className={style.span}>Neutral</span>: {neutral}</p>\r\n            <p><span className={style.span}>Bad</span>: {bad}</p>\r\n            <p><span className={style.span}>Total</span>: {total}</p>\r\n            <p><span className={style.span}>Positive feedback</span>: {positivePercentage ? Math.floor(positivePercentage) : 0} %</p>\r\n        </div>\r\n    ); \r\n}\r\n\r\nexport default Statistics;\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number,\r\n    positivePercentage: PropTypes.number,\r\n}","import React, { Component, useState } from 'react'\r\nimport FeedbackOptions from './FeedbackOptions/FeedbackOptions'\r\nimport Section from './Section/Section';\r\nimport Notification from './Statistics/Notification';\r\nimport Statistics from './Statistics/Statistics'\r\n\r\nconst Feedback = () => {\r\n    const [feadback, setFeadback] = useState({\r\n        good: 0,\r\n        neutral: 0,\r\n        bad: 0\r\n    })\r\n    const onLeaveFeedback = (e) => {\r\n        const {name} = e.target;\r\n        setFeadback((prev) => ({...prev, [name]: prev[name] + 1}))\r\n    }\r\n    const countTotalFeedback = (good, neutral, bad) => {\r\n        return good + neutral + bad;        \r\n    }\r\n    const countPositiveFeedbackPercentage = (good, total) => {\r\n       return good / total * 100\r\n    }\r\n    const {good, neutral, bad} = feadback\r\n    const total = countTotalFeedback(good, neutral, bad)\r\n    const positivePercentage = countPositiveFeedbackPercentage(good, total)\r\n    return (\r\n        <>\r\n                <Section title=\"Please leave feedback\">\r\n                    <FeedbackOptions options={feadback} onLeaveFeedback={onLeaveFeedback} />\r\n                </Section>\r\n                <Section title=\"Statistics\">\r\n                    {total ? \r\n                    <Statistics \r\n                        good={good} \r\n                        neutral={neutral} \r\n                        bad={bad} \r\n                        total={total} \r\n                        positivePercentage={positivePercentage} /> :\r\n                    <Notification message=\"No feedback given\"/> }\r\n                </Section>\r\n            </>\r\n    );\r\n}\r\n\r\nexport default Feedback;\r\n\r\n\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Feedback from './components/Feedback';\n\nfunction App() {\n  return (\n    <Feedback/>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}